import pytest
import pandas as pd
import numpy as np
from dask.distributed import Client
import os
import s3fs
from unittest.mock import patch
import shutil
from dask_ml.linear_model import LinearRegression
import dask.dataframe as ddf
import boto3
from dask_cloudprovider.aws import EC2Cluster
from pandas import Timestamp
import fsspec


@pytest.fixture()
def test_bucket():
    return "s3://divina-test-2"


@pytest.fixture()
def random_state():
    return 11


@pytest.fixture()
def setup_teardown_test_bucket_contents(s3_fs, test_bucket):
    fsspec.filesystem("s3").invalidate_cache()
    try:
        s3_fs.rm(test_bucket, recursive=True)
    except FileNotFoundError:
        pass
    s3_fs.mkdir(
        test_bucket,
        region_name=os.environ["AWS_DEFAULT_REGION"],
        acl="private",
    )
    yield
    try:
        s3_fs.rm(test_bucket, recursive=True)
    except FileNotFoundError:
        pass


@pytest.fixture(autouse=True)
def setup_teardown_test_directory(s3_fs, test_bucket):
    try:
        os.mkdir("divina-test")
    except FileExistsError:
        shutil.rmtree("divina-test")
        os.mkdir("divina-test")
    yield
    try:
        shutil.rmtree("divina-test")
    except FileNotFoundError:
        pass


@patch.dict(os.environ, {"AWS_SHARED_CREDENTIALS_FILE": "~/.aws/credentials"})
@pytest.fixture()
def divina_session():
    return boto3.Session()


@pytest.fixture(scope="session")
def s3_fs():
    return s3fs.S3FileSystem()


@pytest.fixture(scope="session")
def dask_client(request):
    client = Client()
    request.addfinalizer(lambda: client.close())
    yield client
    client.shutdown()


@pytest.fixture(scope="session")
def dask_cluster_ip():
    return None


@pytest.fixture(scope="session")
def dask_client_remote(request, dask_cluster_ip):
    if dask_cluster_ip:
        client = Client(dask_cluster_ip)
        yield client
    else:
        cluster = EC2Cluster(
            key_name="divina2",
            security=False,
            docker_image="jhurdle/divina:test",
            debug=False,
            env_vars={
                "AWS_SECRET_ACCESS_KEY": os.environ["AWS_SECRET_ACCESS_KEY"],
                "AWS_ACCESS_KEY_ID": os.environ["AWS_ACCESS_KEY_ID"],
                "AWS_DEFAULT_REGION": os.environ["AWS_DEFAULT_REGION"],
            },
            auto_shutdown=True,
        )
        cluster.scale(5)
        client = Client(cluster)
        request.addfinalizer(lambda: client.close())
        yield client
        client.shutdown()


@pytest.fixture()
def fd_no_dataset_directory():
    return {
        "forecast_definition": {
            "target": "c",
            "time_index": "a",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": [1],
        }
    }


@pytest.fixture()
def fd_invalid_model():
    return {
        "forecast_definition": {
            "target": "c",
            "time_index": "a",
            "dataset_directory": "divina-test/dataset/test1",
            "model": "scikitlearn.linear_models.linearRegression",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": [1],
        }
    }


@pytest.fixture()
def fd_no_time_index():
    return {
        "forecast_definition": {
            "target": "c",
            "dataset_directory": "divina-test/dataset/test1",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": [1],
        }
    }


@pytest.fixture()
def fd_no_target():
    return {
        "forecast_definition": {
            "time_index": "a",
            "dataset_directory": "divina-test/dataset/test1",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": [1],
        }
    }


@pytest.fixture()
def fd_time_validation_splits_not_list():
    return {
        "forecast_definition": {
            "time_index": "a",
            "target": "c",
            "time_validation_splits": "1970-01-01 00:00:08",
            "time_horizons": [1],
            "dataset_directory": "divina-test/dataset/test1",
        }
    }


@pytest.fixture()
def fd_time_horizons_not_list():
    return {
        "forecast_definition": {
            "time_index": "a",
            "target": "c",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": 1,
            "dataset_directory": "divina-test/dataset/test1",
        }
    }


@pytest.fixture()
def fd_time_horizons_range_not_tuple():
    return {
        "forecast_definition": {
            "time_index": "a",
            "target": "c",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": [[1, 60]],
            "dataset_directory": "divina-test/dataset/test1",
        }
    }


@pytest.fixture()
def test_model_1(test_df_1, random_state, test_fd_1):
    params = [42.29402239932083, 0.7353679291665149, 36.998065910590576, -14.246342053030085]
    intercept = -31.99476098613591
    features = ['b', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(15, inf]']

    model = LinearRegression()
    model.fit(
        ddf.from_pandas(pd.DataFrame([np.array(params) + c for c in range(0, 2)]), npartitions=1).to_dask_array(
            lengths=True),
        ddf.from_pandas(pd.Series([intercept, intercept]), npartitions=1).to_dask_array(lengths=True))
    model.coef_ = np.array(params)
    model.intercept_ = intercept
    model._coef = np.array(params + [intercept])
    return (model, {"features": features})


@pytest.fixture()
def test_model_retail(test_df_1, random_state, test_fd_1):
    params = [7.042927800273491, 0.5194769104807104, 0.23838956824749252, -3.367141229803266, 0.5570688938678713,
              0.5138717682134851, 0.29516597236369446, 0.2604765971338794, 0.5652612650528445, 0.6163276565725425,
              0.3453264172165721, -3.414524776267873, 0.3971655380998304, 0.268849927154394, 0.3510488909207864,
              0.7315548676105141, 0.4987883450964729, 0.48380574294405937, 0.5407656907123938, 0.6627084732221254,
              -3.3671412298032664, 0.2984635992664089, 0.23838956824749252, 0.6295930366428582, 0.5987293721484533,
              0.2692117408589597, 0.35408590627149217, 0.672144026343922, -3.6904752816105617, 0.5011359407090371,
              0.5507776684102844, 0.5018232731893834, 0.4899132109919864, 0.6109742284464623]
    intercept = 0.493981102165459
    features = ['Promo', 'LastDayOfMonth', 'DayOfMonth_19.0', 'DayOfMonth_23.0', 'DayOfMonth_27.0', 'DayOfMonth_28.0',
                'DayOfMonth_29.0', 'DayOfMonth_7.0', 'DayOfMonth_8.0', 'DayOfMonth_11.0', 'DayOfMonth_12.0',
                'DayOfMonth_14.0', 'DayOfMonth_16.0', 'DayOfMonth_17.0', 'DayOfMonth_20.0', 'DayOfMonth_21.0',
                'DayOfMonth_22.0', 'DayOfMonth_24.0', 'DayOfMonth_25.0', 'DayOfMonth_26.0', 'DayOfMonth_30.0',
                'DayOfMonth_31.0', 'DayOfMonth_9.0', 'DayOfMonth_10.0', 'DayOfMonth_13.0', 'DayOfMonth_15.0',
                'DayOfMonth_18.0', 'Weekday_6.0', 'Weekday_3.0', 'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0',
                'Weekday_5.0', 'Weekday_4.0']

    model = LinearRegression()
    model.fit(
        ddf.from_pandas(pd.DataFrame([np.array(params) + c for c in range(0, 2)]), npartitions=1).to_dask_array(
            lengths=True),
        ddf.from_pandas(pd.Series([intercept, intercept]), npartitions=1).to_dask_array(lengths=True))
    model.coef_ = np.array(params)
    model.intercept_ = intercept
    model._coef = np.array(params + [intercept])
    return (model, {"features": features})


@pytest.fixture()
def test_params_1(test_model_1):
    return test_model_1[1]


@pytest.fixture()
def test_bootstrap_models(test_df_1, random_state, test_fd_1):
    params = [[43.53071027441953, 0.6824085144938496, 35.53552539883961, -15.644533586854198],
              [43.289095808310236, 0.7975091437642748, 35.21697740771039, -5.108181385334677],
              [42.91896900218957, 0.8103922586740234, 34.96192027758719, -4.815717516613729],
              [45.28174982254647, 0.5496547154243477, 33.71704394265478, -16.59380700949619],
              [45.522881003151184, 0.6510965285161292, 33.32690985921098, -4.650073040493704]]
    intercepts = [-30.61752065163089, -35.07490345451706, -35.055431021436135, -26.755865504023124, -33.350348213391186]
    features = [['b', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(15, inf]'], ['b', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(15, inf]'],
                ['b', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(15, inf]'], ['b', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(15, inf]'],
                ['b', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(15, inf]']]
    seeds = range(random_state, random_state + test_fd_1["forecast_definition"]["bootstrap_sample"])
    bootstrap_models = {}

    for j, i, p, f, seed in zip(range(0, len(seeds)), intercepts, params, features, seeds):
        model = LinearRegression()
        model.fit(
            ddf.from_pandas(pd.DataFrame([np.array(params[j]) + c for c in range(0, len(seeds))]),
                            npartitions=1).to_dask_array(
                lengths=True),
            ddf.from_pandas(pd.Series(intercepts), npartitions=1).to_dask_array(lengths=True))
        model.coef_ = np.array(p)
        model.intercept_ = i
        model._coef = np.array(p + [i])
        bootstrap_models[seed] = (model, {"features": f})
    return bootstrap_models


@pytest.fixture()
def test_bootstrap_models_retail(test_df_1, random_state, test_fd_1):
    params = [[6.702293547388419, 0.6764087979489286, 0.33740781195937253, -3.1850724011152116, 0.61402401317779,
               0.2925726549877666, 0.3095628056002886, 0.8446823914966463, 0.8003788115211318, 0.5023458119852202,
               -3.2007540962356176, 0.4871448735984417, 0.3310247814191196, 0.6420473857611887, 0.8421655029823722,
               0.7868800747715138, -3.1850724011152103, 0.3470328357913579, 0.33740781195937253, 0.8316758711394272,
               0.45656298028491066, 0.3491114123421185, 0.7962738991564658, -3.5656288750643688, 0.6220963439383229,
               0.5650321062746563, 0.6051687240029017, 0.6237643458023614, 0.7769510269592211],
              [6.751540078646579, 0.6178879074932615, 0.2948089916689689, -3.2166894276691695, 0.6653142483801029,
               0.6820520204800828, 0.3314819051953331, 0.35323564348947056, 0.8185749354558914, 0.7906203647344537,
               0.49765423273957193, -3.205448152191009, 0.468520631669639, 0.254299684458949, 0.34384106412379384,
               0.6555656415217499, 0.755264235563814, -3.2166894276691647, 0.3937455899793964, 0.2948089916689689,
               0.7961502186402359, 0.773128501866507, 0.7646580285503133, -3.590937807466378, 0.6262578469755035,
               0.6820520204800828, 0.602997194830839, 0.6037003188815149, 0.7516438902449617],
              [7.220882442925822, 0.4522206205917787, -3.5213099657035234, 0.5645658768726435, 0.19843005601281186,
               0.1640734424367533, 0.4011342880127088, 0.45216660852096074, -3.553991579678316, 0.38712142282969586,
               0.19623861090803904, 0.3813020553160946, 0.5650164679561406, 0.41508755746428033, 0.4003505251192452,
               0.33934664083029586, 0.5843930530339253, 0.2931687233388606, 0.4745475940868276, 0.32014489654342654,
               0.3444242193166219, 0.5937868589201382, -3.734186883162398, 0.39265675365577557, 0.46716854149722703,
               0.41615154073815225, 0.40405135246326623, 0.6218172193205272],
              [7.209470935415794, 0.4649525686849518, 0.23736511571524113, 0.44881274606505267, 0.4950624106209105,
               0.19751257153450258, 0.24282963368074717, 0.5545474562423282, 0.5374574669287012, 0.3893523253120701,
               -3.483573651698188, 0.361694595038085, 0.2463453962747357, 0.5855941033597353, 0.3389824114477129,
               0.3926377536715046, 0.5068935865547026, -3.5793694631040602, 0.31753977669652367, 0.23736511571524113,
               0.4409721231902529, 0.5184321454595002, 0.25087364511827653, -3.7276637989005463, 0.44978857327145144,
               0.5703471162905078, 0.4149291528871042, 0.40676246603895083, 0.4730192985081431],
              [6.794630111572506, 0.5722438220506303, 0.3047031718444073, -3.227062951569235, 0.5578794334029479,
               0.612873734941668, 0.4356824996824891, 0.28960942288932945, 0.5993780678949668, 0.8172898767206999,
               0.4609356568001654, -3.2421597110585707, 0.33728869061069217, 0.8341504657768288, 0.6429607111232784,
               0.7448999079920192, -3.227062951569233, 0.3047031718444073, 0.7961981077188198, 0.7474235210446805,
               0.30410177719986764, 0.45644643011675473, 0.7542937164719088, -3.61233737683151, 0.6301211540049676,
               0.6523845888585639, 0.6251495048362755, 0.5824272414930879, 0.7302485646148176]]
    intercepts = [0.5627719661456339, 0.6137399516118301, 0.4452692733255572, 0.41407665080401773, 0.5552918919718923]
    features = [['Promo', 'LastDayOfMonth', 'DayOfMonth_19.0', 'DayOfMonth_27.0', 'DayOfMonth_28.0', 'DayOfMonth_29.0',
                 'DayOfMonth_7.0', 'DayOfMonth_8.0', 'DayOfMonth_11.0', 'DayOfMonth_12.0', 'DayOfMonth_14.0',
                 'DayOfMonth_17.0', 'DayOfMonth_22.0', 'DayOfMonth_24.0', 'DayOfMonth_25.0', 'DayOfMonth_26.0',
                 'DayOfMonth_30.0', 'DayOfMonth_31.0', 'DayOfMonth_9.0', 'DayOfMonth_13.0', 'DayOfMonth_15.0',
                 'DayOfMonth_18.0', 'Weekday_6.0', 'Weekday_3.0', 'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0',
                 'Weekday_5.0', 'Weekday_4.0'],
                ['Promo', 'LastDayOfMonth', 'DayOfMonth_19.0', 'DayOfMonth_23.0', 'DayOfMonth_27.0', 'DayOfMonth_28.0',
                 'DayOfMonth_29.0', 'DayOfMonth_7.0', 'DayOfMonth_8.0', 'DayOfMonth_11.0', 'DayOfMonth_12.0',
                 'DayOfMonth_14.0', 'DayOfMonth_16.0', 'DayOfMonth_17.0', 'DayOfMonth_24.0', 'DayOfMonth_25.0',
                 'DayOfMonth_26.0', 'DayOfMonth_30.0', 'DayOfMonth_31.0', 'DayOfMonth_9.0', 'DayOfMonth_10.0',
                 'DayOfMonth_18.0', 'Weekday_6.0', 'Weekday_3.0', 'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0',
                 'Weekday_5.0', 'Weekday_4.0'],
                ['Promo', 'DayOfMonth_19.0', 'DayOfMonth_23.0', 'DayOfMonth_28.0', 'DayOfMonth_29.0', 'DayOfMonth_7.0',
                 'DayOfMonth_8.0', 'DayOfMonth_12.0', 'DayOfMonth_14.0', 'DayOfMonth_16.0', 'DayOfMonth_17.0',
                 'DayOfMonth_20.0', 'DayOfMonth_21.0', 'DayOfMonth_22.0', 'DayOfMonth_24.0', 'DayOfMonth_25.0',
                 'DayOfMonth_30.0', 'DayOfMonth_10.0', 'DayOfMonth_13.0', 'DayOfMonth_15.0', 'DayOfMonth_18.0',
                 'Weekday_6.0', 'Weekday_3.0', 'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0', 'Weekday_5.0',
                 'Weekday_4.0'],
                ['Promo', 'LastDayOfMonth', 'DayOfMonth_23.0', 'DayOfMonth_27.0', 'DayOfMonth_28.0', 'DayOfMonth_29.0',
                 'DayOfMonth_7.0', 'DayOfMonth_8.0', 'DayOfMonth_11.0', 'DayOfMonth_12.0', 'DayOfMonth_14.0',
                 'DayOfMonth_17.0', 'DayOfMonth_20.0', 'DayOfMonth_22.0', 'DayOfMonth_24.0', 'DayOfMonth_25.0',
                 'DayOfMonth_26.0', 'DayOfMonth_30.0', 'DayOfMonth_31.0', 'DayOfMonth_9.0', 'DayOfMonth_10.0',
                 'DayOfMonth_15.0', 'Weekday_6.0', 'Weekday_3.0', 'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0',
                 'Weekday_5.0', 'Weekday_4.0'],
                ['Promo', 'LastDayOfMonth', 'DayOfMonth_19.0', 'DayOfMonth_23.0', 'DayOfMonth_27.0', 'DayOfMonth_28.0',
                 'DayOfMonth_29.0', 'DayOfMonth_7.0', 'DayOfMonth_8.0', 'DayOfMonth_11.0', 'DayOfMonth_12.0',
                 'DayOfMonth_16.0', 'DayOfMonth_20.0', 'DayOfMonth_21.0', 'DayOfMonth_25.0', 'DayOfMonth_26.0',
                 'DayOfMonth_31.0', 'DayOfMonth_9.0', 'DayOfMonth_10.0', 'DayOfMonth_13.0', 'DayOfMonth_15.0',
                 'DayOfMonth_18.0', 'Weekday_6.0', 'Weekday_3.0', 'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0',
                 'Weekday_5.0', 'Weekday_4.0']]
    seeds = range(random_state, random_state + test_fd_1["forecast_definition"]["bootstrap_sample"])
    bootstrap_models = {}

    for j, i, p, f, seed in zip(range(0, len(seeds)), intercepts, params, features, seeds):
        model = LinearRegression()
        model.fit(
            ddf.from_pandas(pd.DataFrame([np.array(params[j]) + c for c in range(0, len(seeds))]),
                            npartitions=1).to_dask_array(
                lengths=True),
            ddf.from_pandas(pd.Series(intercepts), npartitions=1).to_dask_array(lengths=True))
        model.coef_ = np.array(p)
        model.intercept_ = i
        model._coef = np.array(p + [i])
        bootstrap_models[seed] = (model, {"features": f})
    return bootstrap_models


@pytest.fixture()
def test_params_2(test_model_1):
    return test_model_1[1]


@pytest.fixture()
def test_metrics_1():
    return {'splits': {'1970-01-01 00:00:07': {'time_horizons': {'1': {'mae': 13.635626033674352}}}}}


@pytest.fixture()
def test_metrics_retail():
    return {'splits': {'2015-07-18': {'time_horizons': {'2': {'mae': 1655.4381819241344}}}}}


@pytest.fixture()
def test_val_predictions_1():
    df = pd.DataFrame(
        [[Timestamp('1970-01-01 00:00:01'), 33.93062377962286], [Timestamp('1970-01-01 00:00:04'), 25.00661999651522],
         [Timestamp('1970-01-01 00:00:05'), 21.329780350682647], [Timestamp('1970-01-01 00:00:06'), 31.72451999212332],
         [Timestamp('1970-01-01 00:00:07'), 45.59692201317764]]
    )
    df.columns = ['a', 'c_h_1_pred']
    return df


@pytest.fixture()
def test_val_predictions_retail():
    df = pd.DataFrame(
        [[Timestamp('2015-07-18 00:00:00'), 4129.0552147884155], [Timestamp('2015-07-19 00:00:00'), -0.014581358290619944], [Timestamp('2015-07-20 00:00:00'), 4125.8114274059235], [Timestamp('2015-07-21 00:00:00'), 3112.614093952966], [Timestamp('2015-07-22 00:00:00'), 3029.9965966488166], [Timestamp('2015-07-23 00:00:00'), 3297.2016186109454], [Timestamp('2015-07-24 00:00:00'), 3220.73267986328], [Timestamp('2015-07-25 00:00:00'), 4090.2691312480483], [Timestamp('2015-07-26 00:00:00'), -0.014581358290620381], [Timestamp('2015-07-27 00:00:00'), 5579.614347191321], [Timestamp('2015-07-28 00:00:00'), 4269.106111179712], [Timestamp('2015-07-29 00:00:00'), 4074.6866676585882], [Timestamp('2015-07-30 00:00:00'), 4280.266905487076], [Timestamp('2015-07-31 00:00:00'), 5079.49994151688]])
    df.columns = ['Date', 'Sales_h_2_pred']
    return df


@pytest.fixture()
def test_forecast_1():
    df = pd.DataFrame(
        [[Timestamp('1970-01-01 00:00:05'), 15.0, 18.0, 0, 0, 0, 1, 21.329780350682647, 634.4103359898124, 0.0, 0.0,
          -14.246342053030085, 23.14931734019639, 20.1768295102573, 20.019421860863787, 26.770705049888566,
          21.938980717501934, 23.14931734019639],
         [Timestamp('1970-01-01 00:00:06'), 5.0, 6.0, 0, 1, 0, 0, 31.72451999212332, 211.47011199660415, 0.0,
          36.998065910590576, -0.0, 31.298219260034585, 42.168460141796935, 42.15521277894596, 31.43621639017202,
          44.12829060523813, 42.168460141796935],
         [Timestamp('1970-01-01 00:00:07'), 48.0, 54.0, 0, 0, 0, 1, 45.59692201317764, 2030.1130751674, 0.0, 0.0,
          -14.246342053030085, 45.66879831849342, 46.49463125447837, 46.76236639710656, 44.90931065889205,
          43.425166158534196, 46.41273308192788],
         [Timestamp('1970-01-01 00:00:10'), 0.0, 84.0, 1, 0, 0, 0, 79.2920883099114, 0.0, 0.7353679291665149, 0.0, -0.0,
          79.06623567325914, 78.50607321602062, 77.88088927977677, 78.99879376520126, 78.84979086236217,
          79.06623567325914],
         [Timestamp('1970-01-01 00:00:10'), 1.0, 84.0, 1, 0, 0, 0, 80.02745623907792, 42.29402239932083,
          0.7353679291665149, 0.0, -0.0, 79.74864418775299, 79.3035823597849, 78.6912815384508, 79.54844848062561,
          79.5008873908783, 79.74864418775299],
         [Timestamp('1970-01-01 00:00:10'), 2.0, 84.0, 1, 0, 0, 0, 80.76282416824444, 84.58804479864166,
          0.7353679291665149, 0.0, -0.0, 80.43105270224684, 80.10109150354917, 79.50167379712481, 80.09810319604995,
          80.15198391939443, 80.43105270224684],
         [Timestamp('1970-01-01 00:00:10'), 3.0, 84.0, 1, 0, 0, 0, 81.49819209741095, 126.8820671979625,
          0.7353679291665149, 0.0, -0.0, 81.11346121674069, 80.89860064731344, 80.31206605579884, 80.6477579114743,
          80.80308044791056, 81.11346121674069],
         [Timestamp('1970-01-01 00:00:10'), 4.0, 84.0, 1, 0, 0, 0, 82.23356002657746, 169.17608959728332,
          0.7353679291665149, 0.0, -0.0, 81.79586973123455, 81.69610979107772, 81.12245831447287, 81.19741262689865,
          81.45417697642668, 81.79586973123455],
         [Timestamp('1970-01-01 00:00:10'), 5.0, 84.0, 0, 1, 0, 0, 31.72451999212332, 211.47011199660415, 0.0,
          36.998065910590576, -0.0, 31.298219260034585, 42.168460141796935, 42.15521277894596, 31.43621639017202,
          44.12829060523813, 42.168460141796935]]
    )
    df.index = list(df.index + 1)
    df.index.name = "forecast_index"
    df.columns = ['a', 'b', 'c', 'b_(-inf, 5]', 'b_(5, 10]', 'b_(10, 15]', 'b_(15, inf]',
                  'c_h_1_pred', 'factor_b', 'factor_b_(-inf, 5]', 'factor_b_(5, 10]',
                  'factor_b_(15, inf]', 'c_h_1_pred_b_11', 'c_h_1_pred_b_12',
                  'c_h_1_pred_b_13', 'c_h_1_pred_b_14', 'c_h_1_pred_b_15',
                  'c_h_1_pred_c_90']
    return df


@pytest.fixture()
def test_forecast_retail():
    df = pd.DataFrame([[3650.0, Timestamp('2015-07-07 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3326.6190875210204, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.2604765971338794, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.5507776684102844, 0.0, 0.0,
                        0.0, 3469.8148167679537, 3543.3575977463533, 3095.9352476826125, 3564.100576117908,
                        3037.616780089129, 3037.616780089129, 3564.100576117908],
                       [3797.0, Timestamp('2015-07-08 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3459.501043535045, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.5652612650528445, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834, 0.0,
                        0.0, 3381.724418280418, 3448.0729447957247, 3218.8833266103547, 3475.1855607783746,
                        3619.4269135500344, 3218.8833266103547, 3619.4269135500344],
                       [3897.0, Timestamp('2015-07-09 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3545.288269571611, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.23838956824749252, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0,
                        0.0, 0.0, 3483.4509441172954, 3546.321690203147, 2024.4338359738101, 3294.2312674958894,
                        3717.0305063705628, 2024.4338359738101, 3717.0305063705628],
                       [3808.0, Timestamp('2015-07-10 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3412.994439394051, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.6295930366428582, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6109742284464623, 1428.479274932864, 3422.465195382586, 3430.3165843280394,
                        3434.7129292970203, 3284.7345873286363, 1428.479274932864, 3434.7129292970203],
                       [3530.0, Timestamp('2015-07-11 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2977.658903841325, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6163276565725425, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.4899132109919864,
                        0.0, 2925.5817605331295, 2982.4576783650664, 2546.0717939806073, 3201.998109035355,
                        2937.9696302019433, 2546.0717939806073, 3201.998109035355],
                       [0.0, Timestamp('2015-07-12 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.06018502444165755, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3453264172165721, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, -0.06207887679506772, -0.043855169447003545, -0.06508159409662918, -0.0017649558133463056,
                        -0.05811018109674476, -0.06508159409662918, -0.0017649558133463056],
                       [5054.0, Timestamp('2015-07-13 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4368.4574192370455,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.5987293721484533, 0.0, 0.0, 0.0, -0.0,
                        0.5011359407090371, 0.0, 0.0, 0.0, 0.0, 4447.389643924345, 3137.4364424480045,
                        4723.025151781441, 3806.6619578249893, 4117.977779066099, 3137.4364424480045,
                        4723.025151781441],
                       [5042.0, Timestamp('2015-07-14 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4727.642876565682,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.414524776267873, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.5507776684102844, 0.0, 0.0, 0.0, 4773.363487291627, 4631.934801286029, 4799.023184965433,
                        4678.971279462784, 2956.2747730862734, 2956.2747730862734, 4799.023184965433],
                       [4767.0, Timestamp('2015-07-15 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4474.636378201104,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.2692117408589597, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.5018232731893834, 0.0, 0.0, 4235.861676305721, 2900.9212743849557, 4543.071227287945,
                        4153.966377744842, 4471.700327090867, 2900.9212743849557, 4543.071227287945],
                       [4427.0, Timestamp('2015-07-16 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4155.341746962344,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.3971655380998304,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617,
                        0.0, 0.0, 0.0, 0.0, 0.0, 2982.3397972537264, 3826.5703885347166, 3872.8279366806755,
                        3374.207481348585, 4163.21798487593, 2982.3397972537264, 4163.21798487593],
                       [4852.0, Timestamp('2015-07-17 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4479.2525824927825,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.268849927154394, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.0, 0.0, 0.0, 0.0, 0.6109742284464623, 3913.720026739568, 4133.034153735013, 4912.168813534042,
                        4165.557987072446, 2756.7373605589705, 2756.7373605589705, 4912.168813534042],
                       [4406.0, Timestamp('2015-07-18 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4129.0552147884155, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.35408590627149217, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 3925.5579190082276, 3895.531188327395, 4611.321189837664,
                        2169.0168987008665, 3939.9314881400496, 2169.0168987008665, 4611.321189837664],
                       [0.0, Timestamp('2015-07-19 00:00:00'), 1, 0.0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.014581358290619944, 0.0,
                        0.0, 0.23838956824749252, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, -0.04725475379428226, -0.05454327038969681, -0.03402218023604122, 31.518434259389018,
                        -0.043782820792916455, -0.05454327038969681, 31.518434259389018],
                       [4395.0, Timestamp('2015-07-20 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4125.8114274059235, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.3510488909207864, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.5011359407090371, 0.0, 0.0, 0.0,
                        0.0, 1431.7137522148248, 1690.8740504491216, 3838.3849073702268, 4294.881942719219,
                        3947.7927023751135, 1431.7137522148248, 4294.881942719219],
                       [3558.0, Timestamp('2015-07-21 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3112.614093952966, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.7315548676105141, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.5507776684102844, 0.0, 0.0,
                        0.0, 1490.3876457135877, 1562.2734599156959, 3139.4505037038602, 2046.551746252571,
                        3172.9759616296974, 1490.3876457135877, 3172.9759616296974],
                       [3464.0, Timestamp('2015-07-22 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3029.9965966488166, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.4987883450964729,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834, 0.0,
                        0.0, 2886.3813958379446, 1563.3730216019792, 3056.290424568443, 2849.403416522363,
                        1597.8779053920084, 1563.3730216019792, 3056.290424568443],
                       [3769.0, Timestamp('2015-07-23 00:00:00'), 1, 0.0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3297.2016186109454, 0.0,
                        0.0, 0.0, -3.367141229803266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0, 0.0,
                        0.0, 1515.84817406905, 3111.284103414067, 3561.098346769356, 3320.169486164899,
                        2928.627904749186, 1515.84817406905, 3561.098346769356],
                       [3706.0, Timestamp('2015-07-24 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3220.73267986328, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.48380574294405937, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.6109742284464623, 3317.3767662414093, 3042.7502585643215, 2996.3935012565207,
                        3028.5983740254223, 1555.075154757159, 1555.075154757159, 3317.3767662414093],
                       [4364.0, Timestamp('2015-07-25 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4090.2691312480483, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.5407656907123938, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 3888.845229729898, 3859.0993653853343, 4568.196808051582,
                        3601.5017746098124, 3903.084470381209, 3601.5017746098124, 4568.196808051582],
                       [0.0, Timestamp('2015-07-26 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, -0.014581358290620381, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6627084732221254, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, -0.047254753794281415, -0.05454327038969261, 31.677787304648493, -0.09295419327702162,
                        -0.04378282079291433, -0.09295419327702162, 31.677787304648493],
                       [6102.0, Timestamp('2015-07-27 00:00:00'), 1, 1.0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 5579.614347191321,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.5570688938678713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.5011359407090371, 0.0, 0.0, 0.0, 0.0, 5205.996415642476, 6206.614900135907,
                        3428.8493057625196, 6245.852594519792, 5608.025397132909, 3428.8493057625196,
                        6245.852594519792],
                       [5011.0, Timestamp('2015-07-28 00:00:00'), 1, 1.0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4269.106111179712,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.5138717682134851, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.5507776684102844, 0.0, 0.0, 0.0, 3929.1926512181008, 4038.624762878884, 3973.620934966431,
                        3970.3653384449008, 4570.999603274769, 3929.1926512181008, 4570.999603274769],
                       [4782.0, Timestamp('2015-07-29 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4074.6866676585882,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.29516597236369446, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.5018232731893834, 0.0, 0.0, 4071.5698694836624, 4130.36834098279, 3793.1961849306877,
                        4120.677846838829, 3784.4142232914614, 3784.4142232914614, 4130.36834098279],
                       [5020.0, Timestamp('2015-07-30 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4280.266905487076,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -3.3671412298032664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617,
                        0.0, 0.0, 0.0, 0.0, 0.0, 4220.017640796866, 4399.315065308618, 4267.119198755137,
                        4635.670644090725, 2971.0139143138017, 2971.0139143138017, 4635.670644090725],
                       [5263.0, Timestamp('2015-07-31 00:00:00'), 1, 1.0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5079.49994151688,
                        7.042927800273491, 0.5194769104807104, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.2984635992664089, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.0, 0.0, 0.0, 0.0, 0.6109742284464623, 5519.865582499049, 5284.835216410034,
                        3354.5545851841116, 5234.566787645764, 5071.414263218777, 3354.5545851841116,
                        5519.865582499049],
                       [np.NaN, Timestamp('2015-08-01 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2107.8583816956575, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.4899132109919864, 0.0,
                        1769.902485341043, 1812.8083396504226, 2546.0717939806073, 2169.0168987008665,
                        1852.5883280457379, 1769.902485341043, 2546.0717939806073],
                       [np.NaN, Timestamp('2015-08-01 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3544.303111288933,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 3482.014287053472, 3363.625275305726, 4002.4840874220185,
                        3453.5338358879035, 3284.001863644244, 3284.001863644244, 4002.4840874220185],
                       [np.NaN, Timestamp('2015-08-02 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 27.572722919894833, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        22.026936257865202, 22.584796095442616, 31.677787304648493, 31.518434259389018,
                        23.101949630145572, 22.026936257865202, 31.677787304648493],
                       [np.NaN, Timestamp('2015-08-02 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 47.03497681264347,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 44.289420867105726, 42.749937256850465, 50.3629029992382, 50.76735328946445,
                        41.71441951512665, 41.71441951512665, 50.76735328946445],
                       [np.NaN, Timestamp('2015-08-03 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1984.6576909239823, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.5011359407090371, 0.0, 0.0, 0.0, 0.0,
                        1431.7137522148248, 1690.8740504491216, 2181.117434101538, 2390.8395898116687,
                        1713.7364947707315, 1431.7137522148248, 2390.8395898116687],
                       [np.NaN, Timestamp('2015-08-03 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3337.184512858169,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.5011359407090371, 0.0, 0.0,
                        0.0, 0.0, 2816.864060573163, 3137.4364424480045, 3428.8493057625196, 3806.6619578249893,
                        3037.923204118087, 2816.864060573163, 3806.6619578249893],
                       [np.NaN, Timestamp('2015-08-04 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1889.7920105242824, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.5507776684102844, 0.0, 0.0, 0.0,
                        1490.3876457135877, 1562.2734599156959, 2072.5844014151503, 2046.551746252571,
                        1667.6657206750572, 1490.3876457135877, 2072.5844014151503],
                       [np.NaN, Timestamp('2015-08-04 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 3177.7012612587155,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.5507776684102844, 0.0,
                        0.0, 0.0, 2932.2639829431905, 2898.88158090657, 3258.2572280886707, 3258.5768228328056,
                        2956.2747730862734, 2898.88158090657, 3258.5768228328056],
                       [np.NaN, Timestamp('2015-08-05 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1867.4061332900164, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834, 0.0, 0.0,
                        1518.3803909349854, 1563.3730216019792, 2047.6448307964226, 2029.8981273398203,
                        1597.8779053920084, 1518.3803909349854, 2047.6448307964226],
                       [np.NaN, Timestamp('2015-08-05 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 3140.0672878746104,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834,
                        0.0, 0.0, 2987.3201660741324, 2900.9212743849557, 3219.0572438733952, 3232.0652827344184,
                        2832.5940723633785, 2832.5940723633785, 3232.0652827344184],
                       [np.NaN, Timestamp('2015-08-06 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1888.4928542891562, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0, 0.0, 0.0,
                        1515.84817406905, 1599.0624290486385, 2024.4338359738101, 2119.1868672001297, 1675.98239788828,
                        1515.84817406905, 2119.1868672001297],
                       [np.NaN, Timestamp('2015-08-06 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3175.5171873149993,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0,
                        0.0, 0.0, 2982.3397972537264, 2967.1253378081383, 3182.5742328152946, 3374.207481348585,
                        2971.0139143138017, 2967.1253378081383, 3374.207481348585],
                       [np.NaN, Timestamp('2015-08-07 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3300.6253862763756, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.2604765971338794, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6109742284464623, 3325.7392699406355, 3581.6390252353895, 3187.436672264077,
                        3561.0626155681866, 2832.5909449928986, 2832.5909449928986, 3581.6390252353895],
                       [np.NaN, Timestamp('2015-08-07 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5549.521009791267,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.2604765971338794, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.6109742284464623, 6542.036955687372, 6644.81673437828, 5010.580557457678,
                        5669.585255994336, 5020.80090059211, 5010.580557457678, 6644.81673437828],
                       [np.NaN, Timestamp('2015-08-08 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3904.8460045167762, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.5652612650528445, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.4899132109919864,
                        0.0, 3941.709222323355, 3998.01889443656, 4002.2678567955554, 3713.308122283682,
                        4196.181690276516, 3713.308122283682, 4196.181690276516],
                       [np.NaN, Timestamp('2015-08-08 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 6565.305311072888,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.5652612650528445, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 7753.5277985225075, 7417.20387221269, 6291.331138935731,
                        5911.950766892163, 7437.409848614253, 5911.950766892163, 7753.5277985225075],
                       [np.NaN, Timestamp('2015-08-09 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 52.626618322757935, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.23838956824749252, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 51.896678227596034, 51.28724656582692, 31.677787304648493, 49.54071553752037,
                        52.43632950514602, 31.677787304648493, 52.626618322757935],
                       [np.NaN, Timestamp('2015-08-09 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 89.15428368153721,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.23838956824749252, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 103.03728467799058, 95.99315386620763, 50.3629029992382,
                        79.45771994627088, 93.70195693117302, 50.3629029992382, 103.03728467799058],
                       [np.NaN, Timestamp('2015-08-10 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3612.5098652630304, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.6295930366428582, 0.0, 0.0, 0.0, 0.0, -0.0, 0.5011359407090371, 0.0, 0.0, 0.0,
                        0.0, 1431.7137522148248, 3664.5020905434794, 3506.288737478009, 4015.8375670779824,
                        3619.756357299545, 1431.7137522148248, 4015.8375670779824],
                       [np.NaN, Timestamp('2015-08-10 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 6073.844986835682,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.6295930366428582, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.5011359407090371, 0.0, 0.0, 0.0, 0.0, 2816.864060573163, 6798.5282141582575,
                        5511.751813149162, 6393.5590917028785, 6415.846287584763, 2816.864060573163,
                        6798.5282141582575],
                       [np.NaN, Timestamp('2015-08-11 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2669.6508632085975, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6163276565725425, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.5507776684102844, 0.0, 0.0,
                        0.0, 2463.6573811709777, 2570.363305270003, 2072.5844014151503, 3021.2365435611646,
                        2644.7643273970925, 2072.5844014151503, 3021.2365435611646],
                       [np.NaN, Timestamp('2015-08-11 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4488.759434147886,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6163276565725425, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.5507776684102844, 0.0, 0.0, 0.0, 4846.492700681991, 4768.894249451175, 3258.2572280886707,
                        4810.215251844056, 4687.927209326079, 3258.2572280886707, 4846.492700681991],
                       [np.NaN, Timestamp('2015-08-12 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 60.45567817998765, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3453264172165721, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834, 0.0,
                        0.0, 60.88660735770006, 62.420822957648426, 57.612161882757405, 61.343520776936316,
                        61.48319508868706, 57.612161882757405, 62.420822957648426],
                       [np.NaN, Timestamp('2015-08-12 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 102.31609222744149,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.3453264172165721, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.5018232731893834, 0.0, 0.0, 120.71869393623122, 116.64600439819344, 91.12651876620376,
                        98.24706213174753, 109.73516659936527, 91.12651876620376, 120.71869393623122],
                       [np.NaN, Timestamp('2015-08-13 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 2472.2181636359733, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.5987293721484533, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0, 0.0,
                        0.0, 2393.555437696254, 1599.0624290486385, 2788.6853568271463, 2119.1868672001297,
                        2271.993678624855, 1599.0624290486385, 2788.6853568271463],
                       [np.NaN, Timestamp('2015-08-13 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4156.845840451668,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.5987293721484533, 0.0, 0.0, 0.0, -3.6904752816105617,
                        0.0, 0.0, 0.0, 0.0, 0.0, 4708.61606845983, 2967.1253378081383, 4383.823765614178,
                        3374.207481348585, 4027.2884593940844, 2967.1253378081383, 4708.61606845983],
                       [np.NaN, Timestamp('2015-08-14 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2789.7745158527537, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.414524776267873, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6109742284464623, 2325.7096639667684, 2523.5059568906354, 3143.0691232723902,
                        2936.2885746000975, 1555.075154757159, 1555.075154757159, 3143.0691232723902],
                       [np.NaN, Timestamp('2015-08-14 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4690.705075996197,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.414524776267873, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.6109742284464623, 4575.176875069977, 4681.9735890679485, 4940.843702451898,
                        4674.983294322603, 2756.7373605589705, 2756.7373605589705, 4940.843702451898],
                       [np.NaN, Timestamp('2015-08-15 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3003.865042537145, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.2692117408589597, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.4899132109919864,
                        0.0, 2509.798192843266, 1812.8083396504226, 3593.369533301079, 2787.7922032970837,
                        2924.8054998072457, 1812.8083396504226, 3593.369533301079],
                       [np.NaN, Timestamp('2015-08-15 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5050.622942904534,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.2692117408589597, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 4937.242534510296, 3363.625275305726, 5648.625293206371,
                        4438.586177102012, 5184.227147853622, 3363.625275305726, 5648.625293206371],
                       [np.NaN, Timestamp('2015-08-16 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 36.386229663919686, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.3971655380998304, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 22.026936257865202, 29.41396736338925, 38.762894191322836, 31.518434259389018,
                        32.77029011776991, 22.026936257865202, 38.762894191322836],
                       [np.NaN, Timestamp('2015-08-16 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 61.851786301687014,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.3971655380998304,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 44.289420867105726, 55.41809064176291, 61.49926466188117,
                        50.76735328946445, 58.84903135942896, 44.289420867105726, 61.851786301687014],
                       [np.NaN, Timestamp('2015-08-17 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2819.739488737312, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.268849927154394, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.5011359407090371, 0.0, 0.0, 0.0,
                        0.0, 1993.9024583723028, 2385.14211580614, 3194.0341001853617, 3058.979354355558,
                        1713.7364947707315, 1713.7364947707315, 3194.0341001853617],
                       [np.NaN, Timestamp('2015-08-17 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4741.080631092445,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.268849927154394, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.5011359407090371, 0.0, 0.0, 0.0, 0.0, 3922.5778487547286, 4425.3078395924485,
                        5020.950385965534, 4870.299492215089, 3037.923204118087, 3037.923204118087, 5020.950385965534],
                       [np.NaN, Timestamp('2015-08-18 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3701.987109483897, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.35408590627149217, 0.0, -0.0, 0.0, 0.5507776684102844, 0.0,
                        0.0, 0.0, 3305.799792231337, 3357.3172264055097, 3753.9146813082616, 2046.551746252571,
                        3546.7658023027725, 2046.551746252571, 3753.9146813082616],
                       [np.NaN, Timestamp('2015-08-18 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 6224.2694795750795,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.35408590627149217, 0.0, -0.0, 0.0,
                        0.5507776684102844, 0.0, 0.0, 0.0, 6502.81995401012, 6228.698461214685, 5900.969945162601,
                        3258.5768228328056, 6286.489566049069, 3258.5768228328056, 6502.81995401012],
                       [np.NaN, Timestamp('2015-08-19 00:00:00'), 1, 0.0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 63.43775901897489, 0.0,
                        0.0, 0.23838956824749252, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834,
                        0.0, 0.0, 61.864743638965315, 61.711884169318594, 59.559347200412255, 2029.8981273398203,
                        62.43364516363576, 59.559347200412255, 2029.8981273398203],
                       [np.NaN, Timestamp('2015-08-19 00:00:00'), 1, 1.0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 107.32941155146148,
                        7.042927800273491, 0.0, 0.23838956824749252, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.5018232731893834, 0.0, 0.0, 122.64249418527551, 115.33091872253792, 94.18710208109727,
                        3232.0652827344184, 111.41959146343372, 94.18710208109727, 3232.0652827344184],
                       [np.NaN, Timestamp('2015-08-20 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3925.9511249211832, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.3510488909207864, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0, 0.0,
                        0.0, 1515.84817406905, 1599.0624290486385, 3562.703758187824, 3806.977975108536,
                        3860.850421325619, 1515.84817406905, 3925.9511249211832],
                       [np.NaN, Timestamp('2015-08-20 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 6600.786142637173,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.3510488909207864, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -3.6904752816105617, 0.0, 0.0, 0.0, 0.0, 0.0, 2982.3397972537264, 2967.1253378081383,
                        5600.424868316703, 6061.0674286931935, 6843.122634579355, 2967.1253378081383,
                        6843.122634579355],
                       [np.NaN, Timestamp('2015-08-21 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3088.2920930205746, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.7315548676105141, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6109742284464623, 1428.479274932864, 1579.1578565802265, 3232.2376212684017,
                        2044.8069479514259, 2958.81698101306, 1428.479274932864, 3232.2376212684017],
                       [np.NaN, Timestamp('2015-08-21 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5192.557312397453,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.7315548676105141, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.0, 0.0, 0.6109742284464623, 2810.5024846662604, 2930.202237303329, 5080.998630031867,
                        3255.799210929549, 5244.503627509816, 2810.5024846662604, 5244.503627509816],
                       [np.NaN, Timestamp('2015-08-22 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3420.0670067104156, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.4987883450964729,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.4899132109919864,
                        0.0, 3364.365856058168, 1812.8083396504226, 3800.1167623418587, 3044.6592079634306,
                        1852.5883280457379, 1812.8083396504226, 3800.1167623418587],
                       [np.NaN, Timestamp('2015-08-22 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5750.32005453401,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.4987883450964729, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 6618.007796781741, 3363.625275305726, 5973.590315212993,
                        4847.502697279489, 3284.001863644244, 3284.001863644244, 6618.007796781741],
                       [np.NaN, Timestamp('2015-08-23 00:00:00'), 1, 0.0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 48.87507667393248, 0.0,
                        0.0, 0.0, -3.367141229803266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 22.026936257865202, 44.87482628021693, 56.469905985847376, 49.93854380051099,
                        41.10523872179474, 22.026936257865202, 56.469905985847376],
                       [np.NaN, Timestamp('2015-08-23 00:00:00'), 1, 1.0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 82.84738683386148,
                        7.042927800273491, 0.0, 0.0, -3.367141229803266, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 44.289420867105726, 84.09807603620669, 89.33112245352405,
                        80.0910381458648, 73.62055386166006, 44.289420867105726, 89.33112245352405],
                       [np.NaN, Timestamp('2015-08-24 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3409.0122389164108, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.48380574294405937, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.5011359407090371, 0.0, 0.0, 0.0, 0.0, 3324.885244644427, 3257.941539965897, 3062.758242757858,
                        3541.031832221106, 1713.7364947707315, 1713.7364947707315, 3541.031832221106],
                       [np.NaN, Timestamp('2015-08-24 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 5731.73535344888,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.48380574294405937, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0,
                        0.5011359407090371, 0.0, 0.0, 0.0, 0.0, 6540.357257153533, 6044.355970866439, 4814.611166350385,
                        5637.697477206402, 3037.923204118087, 3037.923204118087, 6540.357257153533],
                       [np.NaN, Timestamp('2015-08-25 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3667.211698524959, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.5407656907123938, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.5507776684102844,
                        0.0, 0.0, 0.0, 3274.8817424325207, 3325.9176012870985, 3718.806897694302, 3398.1941739699423,
                        3513.5948147037584, 3274.8817424325207, 3718.806897694302],
                       [np.NaN, Timestamp('2015-08-25 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 6165.806865992681,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.5407656907123938, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.5507776684102844, 0.0, 0.0, 0.0, 6442.010276420012, 6170.451969565588, 5845.7875771683775,
                        5410.308684168409, 6227.702642095698, 5410.308684168409, 6442.010276420012],
                       [np.NaN, Timestamp('2015-08-26 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 63.43775901897483, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6627084732221254, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.5018232731893834,
                        0.0, 0.0, 61.86474363896543, 61.71188416931893, 2047.6448307964226, 55.64841103944789,
                        62.43364516363593, 55.64841103944789, 2047.6448307964226],
                       [np.NaN, Timestamp('2015-08-26 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 107.32941155146148,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.6627084732221254, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0,
                        0.5018232731893834, 0.0, 0.0, 122.64249418527572, 115.33091872253843, 3219.0572438733952,
                        89.18079665748938, 111.41959146343402, 89.18079665748938, 3219.0572438733952],
                       [np.NaN, Timestamp('2015-08-27 00:00:00'), 1, 0.0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3157.7621627701064, 0.0,
                        0.0, 0.0, -0.0, 0.5570688938678713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617, 0.0, 0.0, 0.0, 0.0,
                        0.0, 2801.9112958149053, 3163.8152058680844, 2024.4338359738101, 3477.379903189051,
                        3094.2532290232557, 2024.4338359738101, 3477.379903189051],
                       [np.NaN, Timestamp('2015-08-27 00:00:00'), 1, 1.0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 5309.346783213611,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.5570688938678713, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -3.6904752816105617,
                        0.0, 0.0, 0.0, 0.0, 0.0, 5511.771126292013, 5869.751060383785, 3182.5742328152946,
                        5536.367509364948, 5484.529052997649, 3182.5742328152946, 5869.751060383785],
                       [np.NaN, Timestamp('2015-08-28 00:00:00'), 1, 0.0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2519.1529542705603, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.5138717682134851, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.6109742284464623, 1914.3165122808275, 2200.2087833957507, 2602.421374605295,
                        2491.546500310167, 2404.7199739984767, 1914.3165122808275, 2602.421374605295],
                       [np.NaN, Timestamp('2015-08-28 00:00:00'), 1, 1.0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4235.750171206538,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.5138717682134851, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.0, 0.6109742284464623, 3766.0480626259987, 4082.2554062827453, 4091.0542839500363,
                        3966.9811839255244, 4262.511200636007, 3766.0480626259987, 4262.511200636007],
                       [np.NaN, Timestamp('2015-08-29 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2735.34570753588, 0.0, 0.0,
                        0.0, -0.0, 0.0, 0.0, 0.29516597236369446, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.4899132109919864,
                        0.0, 2412.4375511270946, 2581.258318716975, 3000.2168578223445, 2765.4491114378716,
                        2475.2190497028855, 2412.4375511270946, 3000.2168578223445],
                       [np.NaN, Timestamp('2015-08-29 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 4599.202192187368,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.29516597236369446, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0,
                        0.4899132109919864, 0.0, 4745.753444116471, 4789.104564299292, 4716.308699970614,
                        4403.017344955036, 4387.452424946769, 4387.452424946769, 4789.104564299292],
                       [np.NaN, Timestamp('2015-08-30 00:00:00'), 1, 0.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 37.50992953071253, 0.0,
                        0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                        -3.3671412298032664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 31.579964323013904, 33.96501048963329, 42.810095561826685, 43.67200027124234,
                        23.101949630145572, 23.101949630145572, 43.67200027124234],
                       [np.NaN, Timestamp('2015-08-30 00:00:00'), 1, 1.0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                        0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 63.74089211764628,
                        7.042927800273491, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.0, 0.0, 0.0, 0.0, 0.0,
                        0.0, 0.0, 0.0, 0.0, -3.3671412298032664, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.672144026343922, -0.0,
                        0.0, 0.0, 0.0, 0.0, 0.0, 63.07833415338863, 63.860302752507955, 67.86065043973653,
                        70.1150851157833, 41.71441951512665, 41.71441951512665, 70.1150851157833]])
    df.index = list(df.index + 1)
    df.index.name = "forecast_index"
    df.columns = ['Sales', 'Date', 'Store', 'Promo', 'LastDayOfMonth', 'DayOfMonth_19.0',
                  'DayOfMonth_23.0', 'DayOfMonth_27.0', 'DayOfMonth_28.0',
                  'DayOfMonth_29.0', 'DayOfMonth_7.0', 'DayOfMonth_8.0',
                  'DayOfMonth_11.0', 'DayOfMonth_12.0', 'DayOfMonth_14.0',
                  'DayOfMonth_16.0', 'DayOfMonth_17.0', 'DayOfMonth_20.0',
                  'DayOfMonth_21.0', 'DayOfMonth_22.0', 'DayOfMonth_24.0',
                  'DayOfMonth_25.0', 'DayOfMonth_26.0', 'DayOfMonth_30.0',
                  'DayOfMonth_31.0', 'DayOfMonth_9.0', 'DayOfMonth_10.0',
                  'DayOfMonth_13.0', 'DayOfMonth_15.0', 'DayOfMonth_18.0',
                  'DayOfMonth_1.0', 'DayOfMonth_6.0', 'DayOfMonth_2.0', 'DayOfMonth_3.0',
                  'DayOfMonth_4.0', 'DayOfMonth_5.0', 'Weekday_6.0', 'Weekday_3.0',
                  'Weekday_0.0', 'Weekday_1.0', 'Weekday_2.0', 'Weekday_5.0',
                  'Weekday_4.0', 'Sales_h_2_pred', 'factor_Promo',
                  'factor_LastDayOfMonth', 'factor_DayOfMonth_19.0',
                  'factor_DayOfMonth_23.0', 'factor_DayOfMonth_27.0',
                  'factor_DayOfMonth_28.0', 'factor_DayOfMonth_29.0',
                  'factor_DayOfMonth_7.0', 'factor_DayOfMonth_8.0',
                  'factor_DayOfMonth_11.0', 'factor_DayOfMonth_12.0',
                  'factor_DayOfMonth_14.0', 'factor_DayOfMonth_16.0',
                  'factor_DayOfMonth_17.0', 'factor_DayOfMonth_20.0',
                  'factor_DayOfMonth_21.0', 'factor_DayOfMonth_22.0',
                  'factor_DayOfMonth_24.0', 'factor_DayOfMonth_25.0',
                  'factor_DayOfMonth_26.0', 'factor_DayOfMonth_30.0',
                  'factor_DayOfMonth_31.0', 'factor_DayOfMonth_9.0',
                  'factor_DayOfMonth_10.0', 'factor_DayOfMonth_13.0',
                  'factor_DayOfMonth_15.0', 'factor_DayOfMonth_18.0',
                  'factor_Weekday_6.0', 'factor_Weekday_3.0', 'factor_Weekday_0.0',
                  'factor_Weekday_1.0', 'factor_Weekday_2.0', 'factor_Weekday_5.0',
                  'factor_Weekday_4.0', 'Sales_h_2_pred_b_11', 'Sales_h_2_pred_b_12',
                  'Sales_h_2_pred_b_13', 'Sales_h_2_pred_b_14', 'Sales_h_2_pred_b_15',
                  'Sales_h_2_pred_c_100', 'Sales_h_2_pred_c_0']
    return df


@pytest.fixture()
def test_fd_1():
    return {
        "forecast_definition": {
            "time_index": "a",
            "target": "c",
            "time_validation_splits": ["1970-01-01 00:00:07"],
            "validate_start": "1970-01-01 00:00:01",
            "validate_end": "1970-01-01 00:00:09",
            "forecast_start": "1970-01-01 00:00:05",
            "forecast_end": "1970-01-01 00:00:14",
            "forecast_freq": "S",
            "confidence_intervals": [90],
            "bootstrap_sample": 5,
            "bin_features": {"b": [5, 10, 15]},
            "scenarios": [
                {"feature": "b", "values": [[0, 5]], "start": "1970-01-01 00:00:09", "end": "1970-01-01 00:00:14"}],
            "time_horizons": [1],
            "dataset_directory": "divina-test/dataset/test1",
            "model": "LinearRegression",
        }
    }


@pytest.fixture()
def test_fd_retail():
    return {
        "forecast_definition": {
            "time_index": "Date",
            "target": "Sales",
            "include_features": ["Store", "Promo", "Weekday",
                                 "LastDayOfMonth", "DayOfMonth"],
            "time_validation_splits": ["2015-07-18"],
            "forecast_end": "2015-08-30",
            "bootstrap_sample": 5,
            "signal_dimensions": ["Store"],
            "time_horizons": [2],
            "forecast_freq": "D",
            "encode_features": ["DayOfMonth", "Weekday"],
            "scenarios": [{"feature": "Promo", "values": [0, 1], "start": "2015-08-01", "end": "2016-01-01"}],
            "dataset_directory": "dataset/retail/sales2",
            "link_function": "log",
            "confidence_intervals": [100, 0],
            "joins": [
                {
                    "dataset_directory": "dataset/time",
                    "join_on": ["Date", "Date"],
                    "as": "time"
                },
                {
                    "dataset_directory": "dataset/retail/store",
                    "join_on": ["Store", "Store"],
                    "as": "store"
                }
            ]
        }
    }


@pytest.fixture()
def test_fd_retail_2(test_bucket, test_fd_retail):
    test_fd = test_fd_retail
    test_fd["forecast_definition"].update(
        {"dataset_directory": "{}/{}".format(test_bucket, test_fd["forecast_definition"]["dataset_directory"])})
    for join in test_fd["forecast_definition"]["joins"]:
        join.update({"dataset_directory": "{}/{}".format(test_bucket, join["dataset_directory"])})
    return test_fd


@pytest.fixture()
def test_fd_2():
    return {
        "forecast_definition": {
            "time_index": "a",
            "target": "c",
            "time_validation_splits": ["1970-01-01 00:00:08"],
            "time_horizons": [1],
            "dataset_directory": "divina-test/dataset/test1",
            "joins": [
                {
                    "dataset_directory": "dataset/test2",
                    "join_on": ("a", "a"),
                    "as": "test2",
                }
            ],
        }
    }


@pytest.fixture()
def test_fd_3(test_bucket, test_fd_1):
    test_fd = test_fd_1
    test_fd["forecast_definition"].update({"dataset_directory": "{}/dataset/test1".format(test_bucket)})
    return test_fd


@pytest.fixture()
def test_composite_dataset_1():
    df = pd.DataFrame(
        [[Timestamp("1970-01-01 00:00:01"), 8.0, 12.0, 2.0, 3.0],
         [Timestamp("1970-01-01 00:00:04"), 20.0, 24.0, np.NaN, 6.0],
         [Timestamp("1970-01-01 00:00:05"), 15.0, 18.0, np.NaN, np.NaN],
         [Timestamp("1970-01-01 00:00:06"), 5.0, 6.0, np.NaN, np.NaN],
         [Timestamp("1970-01-01 00:00:07"), 48.0, 54.0, 8.0, np.NaN],
         [Timestamp("1970-01-01 00:00:10"), 77.0, 84.0, np.NaN, np.NaN]]
    )
    df.columns = ["a", "b", "c", "e", "f"]
    return df


@pytest.fixture()
def test_df_1():
    df = (
        pd.DataFrame(
            [
                [Timestamp("1970-01-01 00:00:01"), 2.0, 3.0],
                [Timestamp("1970-01-01 00:00:04"), 5.0, 6.0],
                [Timestamp("1970-01-01 00:00:05"), 5.0, 6.0],
                [Timestamp("1970-01-01 00:00:06"), 5.0, 6.0],
                [Timestamp("1970-01-01 00:00:07"), 8.0, 9],
                [Timestamp("1970-01-01 00:00:10"), 11.0, 12.0],
            ]
        )
            .sample(25, replace=True, random_state=11)
            .reset_index(drop=True)
    )
    df.columns = ["a", "b", "c"]
    return df


@pytest.fixture()
def test_df_2():
    df = pd.DataFrame(
        [[Timestamp("1970-01-01 00:00:01"), 2.0, 3.0], [Timestamp("1970-01-01 00:00:04"), np.NaN, 6.0],
         [Timestamp("1970-01-01 00:00:07"), 8.0, np.NaN], [np.NaN, 11.0, 12.0]]
    )
    df.columns = ["a", "e", "f"]
    return df


@pytest.fixture()
def test_df_3():
    df = pd.DataFrame([[1, 2, 3], [4, "a", 6], [7, 8, "b"], ["c", 11, 12]]).astype(
        "str"
    )
    df.columns = ["a", "b", "c"]
    return df


@pytest.fixture()
def test_df_retail_sales():
    df = pd.DataFrame([[1, 5, "2015-07-31", 5263, 555, 1, 1, "z", 1],
                       [1, 4, "2015-07-30", 5020, 546, 1, 1, "z", 1],
                       [1, 3, "2015-07-29", 4782, 523, 1, 1, "z", 1],
                       [1, 2, "2015-07-28", 5011, 560, 1, 1, "z", 1],
                       [1, 1, "2015-07-27", 6102, 612, 1, 1, "z", 1],
                       [1, 7, "2015-07-26", 0, 0, 0, 0, "z", 0],
                       [1, 6, "2015-07-25", 4364, 500, 1, 0, "z", 0],
                       [1, 5, "2015-07-24", 3706, 459, 1, 0, "z", 0],
                       [1, 4, "2015-07-23", 3769, 503, 1, 0, "z", 0],
                       [1, 3, "2015-07-22", 3464, 463, 1, 0, "z", 0],
                       [1, 2, "2015-07-21", 3558, 469, 1, 0, "z", 0],
                       [1, 1, "2015-07-20", 4395, 526, 1, 0, "z", 0],
                       [1, 7, "2015-07-19", 0, 0, 0, 0, "z", 0],
                       [1, 6, "2015-07-18", 4406, 512, 1, 0, "z", 0],
                       [1, 5, "2015-07-17", 4852, 519, 1, 1, "z", 0],
                       [1, 4, "2015-07-16", 4427, 517, 1, 1, "z", 0],
                       [1, 3, "2015-07-15", 4767, 550, 1, 1, "z", 0],
                       [1, 2, "2015-07-14", 5042, 544, 1, 1, "z", 0],
                       [1, 1, "2015-07-13", 5054, 553, 1, 1, "z", 0],
                       [1, 7, "2015-07-12", 0, 0, 0, 0, "z", 0],
                       [1, 6, "2015-07-11", 3530, 441, 1, 0, "z", 0],
                       [1, 5, "2015-07-10", 3808, 449, 1, 0, "z", 0],
                       [1, 4, "2015-07-09", 3897, 480, 1, 0, "z", 0],
                       [1, 3, "2015-07-08", 3797, 485, 1, 0, "z", 0],
                       [1, 2, "2015-07-07", 3650, 485, 1, 0, "z", 0]])
    df.columns = ["Store", "DayOfWeek", "Date", "Sales", "Customers", "Open", "Promo",
                  "StateHoliday", "SchoolHoliday"]
    return df


@pytest.fixture()
def test_df_retail_stores():
    df = pd.DataFrame([[1.0, "c", "a", 1270.0, 9.0, 2008, 0.0, np.NaN, np.NaN, None]])
    df.columns = ["Store", "StoreType", "Assortment", "CompetitionDistance",
                  "CompetitionOpenSinceMonth", "CompetitionOpenSinceYear", "Promo2",
                  "Promo2SinceWeek", "Promo2SinceYear", "PromoInterval"]
    return df


@pytest.fixture()
def test_df_retail_time():
    df = pd.DataFrame([[Timestamp('2015-07-01 00:00:00'), 7, 1, 2015, 2, False, 'None', 27, 78708, 0, 1, 1],
                       [Timestamp('2015-07-02 00:00:00'), 7, 2, 2015, 3, False, 'None', 27, 78709, 0, 2, 1],
                       [Timestamp('2015-07-03 00:00:00'), 7, 3, 2015, 4, True, 'July 4th', 27, 78710, 0, 3, 1],
                       [Timestamp('2015-07-04 00:00:00'), 7, 4, 2015, 5, False, 'None', 27, 78711, 0, 4, 1],
                       [Timestamp('2015-07-05 00:00:00'), 7, 5, 2015, 6, False, 'None', 27, 78712, 0, 5, 1],
                       [Timestamp('2015-07-06 00:00:00'), 7, 6, 2015, 0, False, 'None', 28, 78713, 0, 6, 1],
                       [Timestamp('2015-07-07 00:00:00'), 7, 7, 2015, 1, False, 'None', 28, 78714, 0, 7, 1],
                       [Timestamp('2015-07-08 00:00:00'), 7, 8, 2015, 2, False, 'None', 28, 78715, 0, 8, 2],
                       [Timestamp('2015-07-09 00:00:00'), 7, 9, 2015, 3, False, 'None', 28, 78716, 0, 9, 2],
                       [Timestamp('2015-07-10 00:00:00'), 7, 10, 2015, 4, False, 'None', 28, 78717, 0, 10, 2],
                       [Timestamp('2015-07-11 00:00:00'), 7, 11, 2015, 5, False, 'None', 28, 78718, 0, 11, 2],
                       [Timestamp('2015-07-12 00:00:00'), 7, 12, 2015, 6, False, 'None', 28, 78719, 0, 12, 2],
                       [Timestamp('2015-07-13 00:00:00'), 7, 13, 2015, 0, False, 'None', 29, 78720, 0, 13, 2],
                       [Timestamp('2015-07-14 00:00:00'), 7, 14, 2015, 1, False, 'None', 29, 78721, 0, 14, 2],
                       [Timestamp('2015-07-15 00:00:00'), 7, 15, 2015, 2, False, 'None', 29, 78722, 0, 15, 3],
                       [Timestamp('2015-07-16 00:00:00'), 7, 16, 2015, 3, False, 'None', 29, 78723, 0, 16, 3],
                       [Timestamp('2015-07-17 00:00:00'), 7, 17, 2015, 4, False, 'None', 29, 78724, 0, 17, 3],
                       [Timestamp('2015-07-18 00:00:00'), 7, 18, 2015, 5, False, 'None', 29, 78725, 0, 18, 3],
                       [Timestamp('2015-07-19 00:00:00'), 7, 19, 2015, 6, False, 'None', 29, 78726, 0, 19, 3],
                       [Timestamp('2015-07-20 00:00:00'), 7, 20, 2015, 0, False, 'None', 30, 78727, 0, 20, 3],
                       [Timestamp('2015-07-21 00:00:00'), 7, 21, 2015, 1, False, 'None', 30, 78728, 0, 21, 3],
                       [Timestamp('2015-07-22 00:00:00'), 7, 22, 2015, 2, False, 'None', 30, 78729, 0, 22, 4],
                       [Timestamp('2015-07-23 00:00:00'), 7, 23, 2015, 3, False, 'None', 30, 78730, 0, 23, 4],
                       [Timestamp('2015-07-24 00:00:00'), 7, 24, 2015, 4, False, 'None', 30, 78731, 0, 24, 4],
                       [Timestamp('2015-07-25 00:00:00'), 7, 25, 2015, 5, False, 'None', 30, 78732, 0, 25, 4],
                       [Timestamp('2015-07-26 00:00:00'), 7, 26, 2015, 6, False, 'None', 30, 78733, 0, 26, 4],
                       [Timestamp('2015-07-27 00:00:00'), 7, 27, 2015, 0, False, 'None', 31, 78734, 0, 27, 4],
                       [Timestamp('2015-07-28 00:00:00'), 7, 28, 2015, 1, False, 'None', 31, 78735, 0, 28, 4],
                       [Timestamp('2015-07-29 00:00:00'), 7, 29, 2015, 2, False, 'None', 31, 78736, 0, 29, 5],
                       [Timestamp('2015-07-30 00:00:00'), 7, 30, 2015, 3, False, 'None', 31, 78737, 0, 30, 5],
                       [Timestamp('2015-07-31 00:00:00'), 7, 31, 2015, 4, False, 'None', 31, 78738, 1, 31, 5],
                       [Timestamp('2015-08-01 00:00:00'), 8, 1, 2015, 5, False, 'None', 31, 78739, 0, 1, 1],
                       [Timestamp('2015-08-02 00:00:00'), 8, 2, 2015, 6, False, 'None', 31, 78740, 0, 2, 1],
                       [Timestamp('2015-08-03 00:00:00'), 8, 3, 2015, 0, False, 'None', 32, 78741, 0, 3, 1],
                       [Timestamp('2015-08-04 00:00:00'), 8, 4, 2015, 1, False, 'None', 32, 78742, 0, 4, 1],
                       [Timestamp('2015-08-05 00:00:00'), 8, 5, 2015, 2, False, 'None', 32, 78743, 0, 5, 1],
                       [Timestamp('2015-08-06 00:00:00'), 8, 6, 2015, 3, False, 'None', 32, 78744, 0, 6, 1],
                       [Timestamp('2015-08-07 00:00:00'), 8, 7, 2015, 4, False, 'None', 32, 78745, 0, 7, 1],
                       [Timestamp('2015-08-08 00:00:00'), 8, 8, 2015, 5, False, 'None', 32, 78746, 0, 8, 2],
                       [Timestamp('2015-08-09 00:00:00'), 8, 9, 2015, 6, False, 'None', 32, 78747, 0, 9, 2],
                       [Timestamp('2015-08-10 00:00:00'), 8, 10, 2015, 0, False, 'None', 33, 78748, 0, 10, 2],
                       [Timestamp('2015-08-11 00:00:00'), 8, 11, 2015, 1, False, 'None', 33, 78749, 0, 11, 2],
                       [Timestamp('2015-08-12 00:00:00'), 8, 12, 2015, 2, False, 'None', 33, 78750, 0, 12, 2],
                       [Timestamp('2015-08-13 00:00:00'), 8, 13, 2015, 3, False, 'None', 33, 78751, 0, 13, 2],
                       [Timestamp('2015-08-14 00:00:00'), 8, 14, 2015, 4, False, 'None', 33, 78752, 0, 14, 2],
                       [Timestamp('2015-08-15 00:00:00'), 8, 15, 2015, 5, False, 'None', 33, 78753, 0, 15, 3],
                       [Timestamp('2015-08-16 00:00:00'), 8, 16, 2015, 6, False, 'None', 33, 78754, 0, 16, 3],
                       [Timestamp('2015-08-17 00:00:00'), 8, 17, 2015, 0, False, 'None', 34, 78755, 0, 17, 3],
                       [Timestamp('2015-08-18 00:00:00'), 8, 18, 2015, 1, False, 'None', 34, 78756, 0, 18, 3],
                       [Timestamp('2015-08-19 00:00:00'), 8, 19, 2015, 2, False, 'None', 34, 78757, 0, 19, 3],
                       [Timestamp('2015-08-20 00:00:00'), 8, 20, 2015, 3, False, 'None', 34, 78758, 0, 20, 3],
                       [Timestamp('2015-08-21 00:00:00'), 8, 21, 2015, 4, False, 'None', 34, 78759, 0, 21, 3],
                       [Timestamp('2015-08-22 00:00:00'), 8, 22, 2015, 5, False, 'None', 34, 78760, 0, 22, 4],
                       [Timestamp('2015-08-23 00:00:00'), 8, 23, 2015, 6, False, 'None', 34, 78761, 0, 23, 4],
                       [Timestamp('2015-08-24 00:00:00'), 8, 24, 2015, 0, False, 'None', 35, 78762, 0, 24, 4],
                       [Timestamp('2015-08-25 00:00:00'), 8, 25, 2015, 1, False, 'None', 35, 78763, 0, 25, 4],
                       [Timestamp('2015-08-26 00:00:00'), 8, 26, 2015, 2, False, 'None', 35, 78764, 0, 26, 4],
                       [Timestamp('2015-08-27 00:00:00'), 8, 27, 2015, 3, False, 'None', 35, 78765, 0, 27, 4],
                       [Timestamp('2015-08-28 00:00:00'), 8, 28, 2015, 4, False, 'None', 35, 78766, 0, 28, 4],
                       [Timestamp('2015-08-29 00:00:00'), 8, 29, 2015, 5, False, 'None', 35, 78767, 0, 29, 5],
                       [Timestamp('2015-08-30 00:00:00'), 8, 30, 2015, 6, False, 'None', 35, 78768, 0, 30, 5],
                       [Timestamp('2015-08-31 00:00:00'), 8, 31, 2015, 0, False, 'None', 36, 78769, 1, 31, 5]])
    df.columns = ['Date', 'Month', 'Day', 'Year', 'Weekday', 'Holiday', 'HolidayType',
                  'WeekOfYear', 'T', 'LastDayOfMonth', 'DayOfMonth', 'WeekOfMonth']
    return df
